# based on hermes example: https://github.boschdevcloud.com/MC/hermes-pubsub-examples/blob/master/docker-compose.yaml

# starts a Kafka stack existing of:
# - zookeeper on port 2181
# - a single kafka broker on port 29092
version: '3'
services:
  zookeeper:
    image: 'bitnami/zookeeper:3'
    ports:
      - "2181:2181"
    volumes:
      - zookeeper_data:/zookeeper
    environment:
      ALLOW_ANONYMOUS_LOGIN: 1

  kafka:
    image: 'bitnami/kafka:latest'
    ports:
      - 9092:9092
      - 29092:29092
    environment:
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CFG_ADVERTISED_HOST_NAME: 127.0.0.1
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT

      # makes sure that Kafka is available via post 29092 from the host using 'localhost:29092'
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,PLAINTEXT_HOST://:29092
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092

      ALLOW_PLAINTEXT_LISTENER: 1
      KAFKA_CFG_MESSAGE_MAX_BYTES: 5242880
      KAFKA_CFG_MAX_REQUEST_SIZE: 5242880
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: "true"

    volumes:
      - kafka_data:/var/run/docker.sock

  akhq:
    image: tchiotludo/akhq
    environment:
      AKHQ_CONFIGURATION: |
        akhq:
          connections:
            docker-kafka-server:
              properties:
                bootstrap.servers: "kafka:9092"
              schema-registry:
                url: "http://kafka-schema-registry:8081"
    ports:
      - 9090:8080
volumes:
  kafka_data:
    driver: local
  zookeeper_data:
    driver: local
